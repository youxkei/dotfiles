[[plugins]]
repo = "Shougo/dein.vim"
hook_add="""
augroup general
  autocmd VimEnter * call dein#call_hook('post_source')
augroup END
"""

[[plugins]]
repo = "thinca/vim-ambicmd"
hook_add = """
cnoremap <expr> <CR>    ambicmd#expand("\<CR>")
cnoremap <expr> <Space> ambicmd#expand("\<Space>")
"""

[[plugins]]
repo = "Shougo/deoplete.nvim"
hook_add = """
let g:deoplete#enable_at_startup = 1
let g:deoplete#omni_patterns = {}
"""

[[plugins]]
repo = "tbodt/deoplete-tabnine"
depends = "deoplete.nvim"
build = "./install.sh"

[[plugins]]
repo = "ujihisa/neco-look"
depends = "deoplete.nvim"

[[plugins]]
repo = "Shougo/neco-syntax"
depends = "deoplete.nvim"

[[plugins]]
repo = "fszymanski/deoplete-emoji"
depends = "deoplete.nvim"

[[plugins]]
repo = "Shougo/denite.nvim"
hook_add = """
nnoremap <silent> <Leader>uu :<C-u>Denite file_mru<CR>
nnoremap <silent> <Leader>ud :<C-u>Denite directory_mru<CR>
nnoremap <silent> <Leader>ug :<C-u>Denite grep<CR>
nnoremap <silent> <Leader>uf :<C-u>Denite file_rec<CR>
nnoremap <silent> <Leader>ub :<C-u>Denite buffer<CR>
nnoremap <silent> <Leader>ul :<C-u>Denite line<CR>
"""
hook_post_source = """
call denite#custom#map('insert', '<Up>', '<denite:move_to_previous_line>', 'noremap')
call denite#custom#map('insert', '<Down>', '<denite:move_to_next_line>', 'noremap')

call denite#custom#alias('source', 'file_rec/git', 'file_rec')
call denite#custom#var('file_rec/git', 'command', ['git', 'ls-files', '-co', '--exclude-standard'])

call denite#custom#var('file_rec', 'command', ['fd', '--type', 'f', '.*'])

call denite#custom#var('grep', 'command', ['rg'])
call denite#custom#var('grep', 'default_opts', ['-i', '--vimgrep'])
call denite#custom#var('grep', 'recursive_opts', [])
call denite#custom#var('grep', 'pattern_opt', [])
call denite#custom#var('grep', 'separator', ['--'])
call denite#custom#var('grep', 'final_opts', [])

call denite#custom#source('_', 'matchers', ['matcher/fruzzy'])
"""

[[plugins]]
repo = "notomo/denite-keymap"
depends = "denite.nvim"

[[plugins]]
repo = "Shougo/neomru.vim"
depends = "denite.nvim"

[[plugins]]
repo = "raghur/fruzzy"
depends = "denite.nvim"
hook_post_update = "call fruzzy#install()"

[[plugins]]
repo = "easymotion/vim-easymotion"
hook_add = """
let g:EasyMotion_keys = 'aoeuidhtns,.pgcr'
let g:EasyMotion_do_mapping = 0 "Disable default mappings
let g:EasyMotion_smartcase = 1
let g:EasyMotion_use_smartsign_jp = 1

nmap s <Plug>(easymotion-s2)
nmap gs <Plug>(easymotion-sn)
"""

[[plugins]]
repo = "tyru/open-browser.vim"

[[plugins]]
repo = "mattn/webapi-vim"

[[plugins]]
repo = "mattn/gist-vim"
depends = "webapi-vim"

[[plugins]]
repo = "itchyny/lightline.vim"
hook_add = """
let g:lightline = {
\ 'colorscheme': 'nord',
\ 'active' : {
\   'left' : [
\     ['mode', 'paste'],
\     ['readonly', 'relativepath', 'modified', 'ale']
\   ],
\ },
\ 'component': {
\   'readonly': '%{&readonly?"⌬":""}',
\ },
\ 'component_function': {
\   'ale': 'ALEGetStatusLine'
\ },
\ 'separator': { 'left': '', 'right': '' },
\ 'subseparator': { 'left': '', 'right': '' },
\}
"""

[[plugins]]
repo = "kannokanno/previm"

[[plugins]]
repo = "LeafCage/yankround.vim"
hook_add = """
let g:yankround_dir = '~/.cache/nvim/yankround'
let g:yankround_max_history = 100

nmap p <Plug>(yankround-p)
xmap p <Plug>(yankround-p)
nmap P <Plug>(yankround-P)
nmap gp <Plug>(yankround-gp)
xmap gp <Plug>(yankround-gp)
nmap gP <Plug>(yankround-gP)
nmap <C-p> <Plug>(yankround-prev)
nmap <C-n> <Plug>(yankround-next)
"""

[[plugins]]
repo = "kana/vim-niceblock"

[[plugins]]
repo = "luochen1990/rainbow"
hook_add = """
let g:rainbow_active = 1
"""

[[plugins]]
repo = "tpope/vim-repeat"

[[plugins]]
repo = "vim-scripts/VOoM"

[[plugins]]
repo = "junegunn/vim-easy-align"
hook_add = """
vmap <Enter> <Plug>(EasyAlign)
"""

[[plugins]]
repo = "deris/vim-rengbang"

[[plugins]]
repo = "mbbill/undotree"
hook_add = """
let g:undotree_WindowLayout = 3
"""

#[[plugins]]
#repo = "nathanaelkane/vim-indent-guides"
#hook_add = """
#let g:indent_guides_enable_on_vim_startup = 1
#let g:indent_guides_start_level = 1
#let g:indent_guides_guide_size = 0
#let g:indent_guides_auto_colors = 0
#"""

[[plugins]]
repo = "Yggdroot/indentLine"
hook_add = """
let g:indentLine_char = '┊'
"""

[[plugins]]
repo = "terryma/vim-multiple-cursors"

[[plugins]]
repo = "bkad/CamelCaseMotion"
hook_add = """
map <silent> w <Plug>CamelCaseMotion_w
map <silent> b <Plug>CamelCaseMotion_b
map <silent> e <Plug>CamelCaseMotion_e
map <silent> ge <Plug>CamelCaseMotion_ge

noremap <silent> ;w w
noremap <silent> ;b b
noremap <silent> ;e e
noremap <silent> ;ge ge

omap <silent> iw <Plug>CamelCaseMotion_iw
xmap <silent> iw <Plug>CamelCaseMotion_iw

onoremap <silent> ;iw iw
xnoremap <silent> ;iw iw
"""

[[plugins]]
repo = "AndrewRadev/inline_edit.vim"
hook_add = """
let g:inline_edit_autowrite = 1
"""

[[plugins]]
repo = "airblade/vim-gitgutter"
hook_add = """
let g:gitgutter_map_keys = 0

nmap ]h <Plug>GitGutterNextHunk
nmap [h <Plug>GitGutterPrevHunk
nmap <Leader>ha <Plug>GitGutterStageHunk
nmap <Leader>hr <Plug>GitGutterUndoHunk


omap ih <Plug>GitGutterTextObjectInnerPending
omap ah <Plug>GitGutterTextObjectOuterPending
xmap ih <Plug>GitGutterTextObjectInnerVisual
xmap ah <Plug>GitGutterTextObjectOuterVisual
"""

[[plugins]]
repo = "Shougo/vinarise.vim"

[[plugins]]
repo = "rhysd/committia.vim"

[[plugins]]
repo = "derekwyatt/vim-fswitch"
hook_add = """
nmap <silent> <Leader>f :FSHere<CR>

augroup general
  autocmd BufEnter *.h let b:fswitchdst  = 'cpp,c'
  autocmd BufEnter *.h let b:fswitchlocs = 'reg:/include/src/'
  autocmd BufEnter *.cpp let b:fswitchdst  = 'h'
  autocmd BufEnter *.cpp let b:fswitchlocs = 'reg:/src/include/'

  autocmd BufEnter *.smi let b:fswitchdst  = 'sml'
  autocmd BufEnter *.smi let b:fswitchlocs  = '.'
  autocmd BufEnter *.sml let b:fswitchdst  = 'smi'
  autocmd BufEnter *.sml let b:fswitchlocs  = '.'

  autocmd BufEnter *.mli let b:fswitchdst  = 'ml'
  autocmd BufEnter *.mli let b:fswitchlocs  = '.'
  autocmd BufEnter *.ml let b:fswitchdst  = 'mli'
  autocmd BufEnter *.ml let b:fswitchlocs  = '.'
augroup END
"""

[[plugins]]
repo = "Shougo/context_filetype.vim"

[[plugins]]
repo = "osyo-manga/vim-precious"
depends = "context_filetype.vim"

[[plugins]]
repo = "kana/vim-tabpagecd"

[[plugins]]
repo = "t9md/vim-choosewin"
hook_add = """
let g:choosewin_overlay_enable = 1
let g:choosewin_overlay_clear_multibyte = 1
let g:choosewin_blink_on_land = 0
let g:choosewin_statusline_replace = 0
let g:choosewin_tabline_replace = 0

nmap  <Leader>-  <Plug>(choosewin)
"""

[[plugins]]
repo = "w0rp/ale"
hook_add = """
let g:ale_lint_on_save = 1
let g:ale_lint_on_text_changed = 0
let g:ale_erlang_erlc_options = '-I./deps/*/include'

let g:ale_linters = {
\ 'rust': [],
\}

let g:ale_fixers = {
\ '*': ['remove_trailing_lines', 'trim_whitespace'],
\ 'rust': ['rustfmt'],
\ 'go': ['gofmt']
\}
let g:ale_fix_on_save = 1

nmap <silent> <C-k> <Plug>(ale_previous_wrap)
nmap <silent> <C-j> <Plug>(ale_next_wrap)
"""

[[plugins]]
repo = "machakann/vim-swap"
hook_add = """
let g:swap_no_default_key_mappings = 1

nmap gs <Plug>(swap-interactive)
omap i, <Plug>(swap-textobject-i)
xmap i, <Plug>(swap-textobject-i)
omap a, <Plug>(swap-textobject-a)
xmap a, <Plug>(swap-textobject-a)
"""

[[plugins]]
repo = "lambdalisue/suda.vim"

[[plugins]]
repo = "sgur/vim-editorconfig"

[[plugins]]
repo = "prakashdanish/vim-githubinator"

[[plugins]]
repo = "lambdalisue/gina.vim"

[[plugins]]
repo = "lambdalisue/vim-manpager"
lazy = 1
on_cmd = "MANPAGER"

[[plugins]]
repo = "majutsushi/tagbar"

[[plugins]]
repo = "rhysd/clever-f.vim"

[[plugins]]
repo = "haya14busa/is.vim"

[[plugins]]
repo = "haya14busa/vim-asterisk"
depends = "is.vim"
hook_add = """
map *  <Plug>(asterisk-z*)<Plug>(is-nohl-1)
map g* <Plug>(asterisk-gz*)<Plug>(is-nohl-1)
map #  <Plug>(asterisk-z#)<Plug>(is-nohl-1)
map g# <Plug>(asterisk-gz#)<Plug>(is-nohl-1)

let g:asterisk#keeppos = 1
"""

[[plugins]]
repo = "osyo-manga/vim-anzu"
hook_add = """
map n <Plug>(is-nohl)<Plug>(anzu-n-with-echo)
map N <Plug>(is-nohl)<Plug>(anzu-N-with-echo)
"""

[[plugins]]
repo = "scrooloose/nerdtree"
hook_add = """
nnoremap <silent> <Leader>v :NERDTreeToggle<CR>
"""

[[plugins]]
repo = "prabirshrestha/async.vim"

[[plugins]]
repo = "prabirshrestha/vim-lsp"
depends = "async.vim"
hook_post_source = """
if executable('gopls')
  autocmd general User lsp_setup call lsp#register_server({
  \ 'name': 'gopls',
  \ 'cmd': {server_info->['gopls']},
  \ 'whitelist': ['go'],
  \ })
  autocmd general FileType go nnoremap <silent><buffer> <C-]> :<C-U>LspDefinition<CR>
endif
"""

[[plugins]]
repo = "lighttiger2505/deoplete-vim-lsp"
depends = "vim-lsp"
depends = "deoplete"
hook_add = """
"""
