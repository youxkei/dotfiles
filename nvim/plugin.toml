[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'thinca/vim-ambicmd'
hook_add = '''
    cnoremap <expr> <CR>    ambicmd#expand("\<CR>")
    cnoremap <expr> <Space> ambicmd#expand("\<Space>")
'''

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
    let g:deoplete#enable_at_startup = 1
    let g:deoplete#omni_patterns = {}
'''

[[plugins]]
repo = 'ujihisa/neco-look'

[[plugins]]
repo = 'Shougo/neco-syntax'

[[plugins]]
repo = 'Shougo/unite.vim'
hook_add = '''
    nnoremap <silent> <Leader>uy :<C-u>Unite history/yank<CR>
    nnoremap <silent> <Leader>ub :<C-u>Unite buffer<CR>
    nnoremap <silent> <Leader>uf :<C-u>Unite -buffer-name=files file file/new<CR>
    nnoremap <silent> <Leader>uu :<C-u>Unite file_mru<CR>
    nnoremap <silent> <Leader>ur :<C-u>Unite -buffer-name=register register<CR>
    nnoremap <silent> <Leader>ug :<C-u>Unite grep:.<CR>
    "call unite#custom#source('grep', 'max_candidates', 0)
    let g:unite_enable_start_insert=1
    let g:unite_source_history_yank_enable =1

    if executable('ag')
      "let g:unite_source_grep_command = 'ag'
      "let g:unite_source_grep_default_opts = '-i --nogroup --nocolor -S'
      "let g:unite_source_grep_recursive_opt = ''
    endif
'''

[[plugins]]
repo = 'Shougo/unite-ssh'

[[plugins]]
repo = 'Shougo/unite-outline'

[[plugins]]
repo = 'Shougo/unite-session'

[[plugins]]
repo = 'osyo-manga/unite-fold'

[[plugins]]
repo = 'thinca/vim-unite-history'

[[plugins]]
repo = 'mopp/unite-animemap'

[[plugins]]
repo = 'ujihisa/unite-colorscheme'

[[plugins]]
repo = 'rhysd/unite-codic.vim'

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/vimfiler.vim'
hook_add = '''
    let g:vimfiler_as_default_explorer = 1
    let g:vimfiler_tree_indentation = 2
    let g:vimfiler_ignore_pattern = '\(^\(\.git\|\.\|\.\.\)$\)\|\.pyc$\|\.o$'
    call vimfiler#custom#profile('default', 'context', { 'auto_cd': 1,  'safe': 0 })
'''

[[plugins]]
repo = 'Lokaltog/vim-easymotion'
hook_add = '''
    nmap <Leader>s <Plug>(easymotion-s2)
    nmap <Leader>gs <Plug>(easymotion-sn)
    let g:EasyMotion_do_mapping = 0 "Disable default mappings
    let g:EasyMotion_enter_jump_first = 1
'''

[[plugins]]
repo = 'kana/vim-submode'
hook_add = '''
    let g:submode_timeout = 0
    call submode#enter_with('winsize', 'n', '', '<Leader>ws')
    call submode#map('winsize', 'n', '', 'h', '<C-w><')
    call submode#map('winsize', 'n', '', 'j', '<C-w>-')
    call submode#map('winsize', 'n', '', 'k', '<C-w>+')
    call submode#map('winsize', 'n', '', 'l', '<C-w>>')
'''

[[plugins]]
repo = 'basyura/TweetVim'
hook_add = '''
    let g:w3m#command = 'w3m'
'''

[[plugins]]
repo = 'basyura/twibill.vim'

[[plugins]]
repo = 'tyru/open-browser.vim'

[[plugins]]
repo = 'mattn/gist-vim'

[[plugins]]
repo = 'mattn/webapi-vim'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
    let g:lightline = {
    \   'colorscheme': 'wombat',
    \   'active' : {
    \       'left' : [
    \           ['mode', 'paste'],
    \           ['syntaxcheck'],
    \           ['readonly', 'filename', 'modified']
    \       ],
    \   },
    \   'component': {
    \       'readonly': '%{&readonly?"‚å¨":""}',
    \   },
    \   'component_expand': {
    \       'syntaxcheck': 'qfstatusline#Update'
    \   },
    \   'component_type': {
    \       'syntaxcheck': 'error'
    \   },
    \   'separator': { 'left': '', 'right': '' },
    \   'subseparator': { 'left': '|', 'right': '|' },
    \}
'''

[[plugins]]
repo = 'kannokanno/previm'

[[plugins]]
repo = 'LeafCage/yankround.vim'
hook_add = '''
    nmap p <Plug>(yankround-p)
    xmap p <Plug>(yankround-p)
    nmap P <Plug>(yankround-P)
    nmap gp <Plug>(yankround-gp)
    xmap gp <Plug>(yankround-gp)
    nmap gP <Plug>(yankround-gP)
    nmap <C-p> <Plug>(yankround-prev)
    nmap <C-n> <Plug>(yankround-next)
    let g:yankround_dir = '~/.cache/nvim/yankround'
    let g:yankround_max_history = 100
'''

[[plugins]]
repo = 'kana/vim-niceblock'

[[plugins]]
repo = 'thinca/vim-fontzoom'

[[plugins]]
repo = 'fcitx.vim'

[[plugins]]
repo = 'luochen1990/rainbow'
hook_add = '''
    let g:rainbow_active = 1
'''

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'VOoM'

[[plugins]]
repo = 'idanarye/vim-vebugger'

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
    vmap <Enter> <Plug>(EasyAlign)
'''

[[plugins]]
repo = 'thinca/vim-visualstar'

[[plugins]]
repo = 'deris/vim-rengbang'

[[plugins]]
repo = 'koron/codic-vim'

[[plugins]]
repo = 'osyo-manga/vim-over'

[[plugins]]
repo = 'thinca/vim-quickrun'

[[plugins]]
repo = 'osyo-manga/shabadou.vim'

[[plugins]]
repo = 'KazuakiM/vim-qfsigns'

[[plugins]]
repo = 'dannyob/quickfixstatus'

[[plugins]]
repo = 'KazuakiM/vim-qfstatusline'
hook_add = '''
    let g:Qfstatusline#UpdateCmd = function('lightline#update')
'''

[[plugins]]
repo = 'sudo.vim'

[[plugins]]
repo = 'mbbill/undotree'
hook_add = '''
    let g:undotree_WindowLayout = 3
'''

[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
    let g:indentLine_faster = 1
    let g:indentLine_noConcealCursor=""
'''

[[plugins]]
repo = 'thinca/vim-qfreplace'

[[plugins]]
repo = 'rhysd/try-colorscheme.vim'

[[plugins]]
repo = 'terryma/vim-multiple-cursors'

[[plugins]]
repo = 'bkad/CamelCaseMotion'

[[plugins]]
repo = 'AndrewRadev/inline_edit.vim'
hook_add = '''
    let g:inline_edit_autowrite = 1
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
    let g:gitgutter_map_keys = 0
'''

[[plugins]]
repo = 'lambdalisue/vim-gita'

[[plugins]]
repo = 'csscomb/vim-csscomb'

[[plugins]]
repo = 'wakatime/vim-wakatime'

[[plugins]]
repo = 'Shougo/vinarise.vim'

[[plugins]]
repo = 'rhysd/committia.vim'

[[plugins]]
repo = 'derekwyatt/vim-fswitch'
hook_add = '''
	nmap <silent> <Leader>f :FSHere<CR>
'''

[[plugins]]
repo = 'jiangmiao/auto-pairs'
