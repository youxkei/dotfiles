[[plugins]]
repo = "Shougo/dein.vim"

[[plugins]]
repo = "thinca/vim-ambicmd"
hook_add = """
cnoremap <expr> <CR>    ambicmd#expand("\<CR>")
cnoremap <expr> <Space> ambicmd#expand("\<Space>")
"""

[[plugins]]
repo = "Shougo/vimproc.vim"
build = "make"

[[plugins]]
repo = "Shougo/deoplete.nvim"
hook_add = """
let g:deoplete#enable_at_startup = 1
let g:deoplete#omni_patterns = {}
"""

[[plugins]]
repo = "ujihisa/neco-look"

[[plugins]]
repo = "Shougo/neco-syntax"

[[plugins]]
repo = "fszymanski/deoplete-emoji"

[[plugins]]
repo = "Shougo/unite.vim"

[[plugins]]
repo = "Shougo/denite.nvim"
hook_add = """
call denite#custom#alias('source', 'file_rec/git', 'file_rec')
call denite#custom#var('file_rec/git', 'command', ['git', 'ls-files', '-co', '--exclude-standard'])

if executable('ag')
  call denite#custom#var('file_rec', 'command', ['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])

  call denite#custom#var('grep', 'command', ['ag'])
  call denite#custom#var('grep', 'default_opts', ['-i', '--vimgrep'])
  call denite#custom#var('grep', 'recursive_opts', [])
  call denite#custom#var('grep', 'pattern_opt', [])
  call denite#custom#var('grep', 'separator', ['--'])
  call denite#custom#var('grep', 'final_opts', [])
endif

nnoremap <silent> <Leader>uu :<C-u>Denite file_mru<CR>
nnoremap <silent> <Leader>ud :<C-u>Denite directory_mru<CR>
nnoremap <silent> <Leader>ug :<C-u>Denite grep<CR>
nnoremap <silent> <Leader>uf :<C-u>Denite file_rec<CR>
nnoremap <silent> <Leader>ub :<C-u>Denite buffer<CR>
nnoremap <silent> <Leader>ul :<C-u>Denite line<CR>
"""

[[plugins]]
repo = "Shougo/neomru.vim"

[[plugins]]
repo = "Shougo/vimfiler.vim"
hook_add = """
let g:vimfiler_as_default_explorer = 1
let g:vimfiler_tree_indentation = 2
let g:vimfiler_ignore_pattern = '\(^\(\.git\|\.\|\.\.\)$\)\|\.pyc$\|\.o$\|\.aux$'
call vimfiler#custom#profile('default', 'context', { 'auto_cd': 1,  'safe': 0 })
"""

[[plugins]]
repo = "easymotion/vim-easymotion"
hook_add = """
nmap s <Plug>(easymotion-s2)
nmap gs <Plug>(easymotion-sn)
let g:EasyMotion_keys = 'aoeuidhtns,.pgcr'
let g:EasyMotion_do_mapping = 0 "Disable default mappings
let g:EasyMotion_smartcase = 1
let g:EasyMotion_use_smartsign_jp = 1
"""

[[plugins]]
repo = "kana/vim-submode"
hook_add = """
"let g:submode_timeout = 0
"call submode#enter_with('winsize', 'n', '', '<Leader>s')
"call submode#map('winsize', 'n', '', 'h', '<C-w><')
"call submode#map('winsize', 'n', '', 'j', '<C-w>-')
"call submode#map('winsize', 'n', '', 'k', '<C-w>+')
"call submode#map('winsize', 'n', '', 'l', '<C-w>>')
"""

[[plugins]]
repo = "basyura/TweetVim"
hook_add = """
  let g:w3m#command = 'w3m'
"""

[[plugins]]
repo = "basyura/twibill.vim"

[[plugins]]
repo = "tyru/open-browser.vim"

[[plugins]]
repo = "mattn/gist-vim"

[[plugins]]
repo = "mattn/webapi-vim"

[[plugins]]
repo = "itchyny/lightline.vim"
hook_add = """
let g:lightline = {
\ 'colorscheme': 'nord',
\ 'active' : {
\   'left' : [
\     ['mode', 'paste'],
\     ['readonly', 'relativepath', 'modified', 'ale']
\   ],
\ },
\ 'component': {
\   'readonly': '%{&readonly?"⌬":""}',
\ },
\ 'component_function': {
\   'ale': 'ALEGetStatusLine'
\ },
\ 'separator': { 'left': '', 'right': '' },
\ 'subseparator': { 'left': '', 'right': '' },
\}
"""

[[plugins]]
repo = "kannokanno/previm"

[[plugins]]
repo = "LeafCage/yankround.vim"
hook_add = """
nmap p <Plug>(yankround-p)
xmap p <Plug>(yankround-p)
nmap P <Plug>(yankround-P)
nmap gp <Plug>(yankround-gp)
xmap gp <Plug>(yankround-gp)
nmap gP <Plug>(yankround-gP)
nmap <C-p> <Plug>(yankround-prev)
nmap <C-n> <Plug>(yankround-next)
let g:yankround_dir = '~/.cache/nvim/yankround'
let g:yankround_max_history = 100
"""

[[plugins]]
repo = "kana/vim-niceblock"

[[plugins]]
repo = "thinca/vim-fontzoom"

[[plugins]]
repo = "luochen1990/rainbow"
hook_add = """
let g:rainbow_active = 1
"""

[[plugins]]
repo = "tpope/vim-repeat"

[[plugins]]
repo = "vim-scripts/VOoM"

[[plugins]]
repo = "idanarye/vim-vebugger"

[[plugins]]
repo = "junegunn/vim-easy-align"
hook_add = """
vmap <Enter> <Plug>(EasyAlign)
"""

[[plugins]]
repo = "thinca/vim-visualstar"

[[plugins]]
repo = "deris/vim-rengbang"

[[plugins]]
repo = "koron/codic-vim"

[[plugins]]
repo = "osyo-manga/shabadou.vim"

[[plugins]]
repo = "KazuakiM/vim-qfsigns"

[[plugins]]
repo = "dannyob/quickfixstatus"

[[plugins]]
repo = "KazuakiM/vim-qfstatusline"
hook_add = """
let g:Qfstatusline#UpdateCmd = function('lightline#update')
"""

[[plugins]]
repo = "mbbill/undotree"
hook_add = """
let g:undotree_WindowLayout = 3
"""

#[[plugins]]
#repo = "Yggdroot/indentLine"
#hook_add = """
#let g:indentLine_faster = 1
#let g:indentLine_setConceal = 0
#"""

[[plugins]]
repo = "nathanaelkane/vim-indent-guides"
hook_add = """
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_start_level = 1
let g:indent_guides_guide_size = 0
let g:indent_guides_auto_colors = 0
"""

[[plugins]]
repo = "thinca/vim-qfreplace"

[[plugins]]
repo = "rhysd/try-colorscheme.vim"

[[plugins]]
repo = "terryma/vim-multiple-cursors"

[[plugins]]
repo = "bkad/CamelCaseMotion"
hook_add = """
map <silent> w <Plug>CamelCaseMotion_w
map <silent> b <Plug>CamelCaseMotion_b
map <silent> e <Plug>CamelCaseMotion_e
map <silent> ge <Plug>CamelCaseMotion_ge

noremap <silent> ;w w
noremap <silent> ;b b
noremap <silent> ;e e
noremap <silent> ;ge ge

omap <silent> iw <Plug>CamelCaseMotion_iw
xmap <silent> iw <Plug>CamelCaseMotion_iw

onoremap <silent> ;iw iw
xnoremap <silent> ;iw iw
"""

[[plugins]]
repo = "AndrewRadev/inline_edit.vim"
hook_add = """
let g:inline_edit_autowrite = 1
"""

[[plugins]]
repo = "airblade/vim-gitgutter"
hook_add = """
let g:gitgutter_map_keys = 0
"""

[[plugins]]
repo = "lambdalisue/vim-gita"

[[plugins]]
repo = "Shougo/vinarise.vim"

[[plugins]]
repo = "rhysd/committia.vim"

[[plugins]]
repo = "derekwyatt/vim-fswitch"
hook_add = """
nmap <silent> <Leader>f :FSHere<CR>
"""

[[plugins]]
repo = "Shougo/deol.nvim"

[[plugins]]
repo = "equalsraf/neovim-gui-shim"

[[plugins]]
repo = "rhysd/vim-grammarous"
hook_add = """
let g:grammarous#default_comments_only_filetypes = {
  \ '*' : 1, 'help' : 0, 'markdown' : 0,
\ }
"""

[[plugins]]
repo = "Shougo/context_filetype.vim"

[[plugins]]
repo = "osyo-manga/vim-precious"

[[plugins]]
repo = "kana/vim-tabpagecd"

[[plugins]]
repo = "t9md/vim-choosewin"
hook_add = """
let g:choosewin_overlay_enable = 1
let g:choosewin_overlay_clear_multibyte = 1
let g:choosewin_blink_on_land = 0
let g:choosewin_statusline_replace = 0
let g:choosewin_tabline_replace = 0

nmap  <Leader>-  <Plug>(choosewin)
"""

[[plugins]]
repo = "w0rp/ale"
hook_add = """
let g:ale_sign_column_always = 1
let g:ale_lint_on_save = 1
let g:ale_lint_on_text_changed = 0
let g:ale_linters = {
\ 'cpp': [],
\}

nmap <silent> <C-k> <Plug>(ale_previous_wrap)
nmap <silent> <C-j> <Plug>(ale_next_wrap)
"""

[[plugins]]
repo = "machakann/vim-swap"
hook_add = """
let g:swap_no_default_key_mappings = 1

nmap gs <Plug>(swap-interactive)
"""

#[[plugins]]
#repo = "henrik/vim-indexed-search"

[[plugins]]
repo = "lambdalisue/suda.vim"

[[plugins]]
repo = "sgur/vim-editorconfig"

[[plugins]]
repo = "raghur/vim-ghost"
hook_post_update = ":GhostInstall"
